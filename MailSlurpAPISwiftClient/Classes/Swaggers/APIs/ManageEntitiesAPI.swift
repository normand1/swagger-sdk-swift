//
// ManageEntitiesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class ManageEntitiesAPI: APIBase {
    /**
     Bulk Delete Inboxes
     
     - parameter ids: (body) ids 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func bulkDeleteInboxesUsingDELETE(ids ids: [NSUUID], completion: ((error: ErrorType?) -> Void)) {
        bulkDeleteInboxesUsingDELETEWithRequestBuilder(ids: ids).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Bulk Delete Inboxes
     - DELETE /bulk/inboxes
     - Enterprise Account Required
     - API Key:
       - type: apiKey x-api-key 
       - name: API_KEY
     
     - parameter ids: (body) ids 

     - returns: RequestBuilder<Void> 
     */
    public class func bulkDeleteInboxesUsingDELETEWithRequestBuilder(ids ids: [NSUUID]) -> RequestBuilder<Void> {
        let path = "/bulk/inboxes"
        let URLString = MailSlurpAPISwiftClientAPI.basePath + path
        let parameters = ids.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = MailSlurpAPISwiftClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete Email
     
     - parameter emailId: (path) emailId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteEmailUsingDELETE(emailId emailId: NSUUID, completion: ((error: ErrorType?) -> Void)) {
        deleteEmailUsingDELETEWithRequestBuilder(emailId: emailId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete Email
     - DELETE /emails/{emailId}
     - Deletes an email and removes it from the inbox
     - API Key:
       - type: apiKey x-api-key 
       - name: API_KEY
     
     - parameter emailId: (path) emailId 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteEmailUsingDELETEWithRequestBuilder(emailId emailId: NSUUID) -> RequestBuilder<Void> {
        var path = "/emails/{emailId}"
        path = path.stringByReplacingOccurrencesOfString("{emailId}", withString: "\(emailId)", options: .LiteralSearch, range: nil)
        let URLString = MailSlurpAPISwiftClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = MailSlurpAPISwiftClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete Inbox
     
     - parameter inboxId: (path) inboxId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteInboxUsingDELETE(inboxId inboxId: NSUUID, completion: ((error: ErrorType?) -> Void)) {
        deleteInboxUsingDELETEWithRequestBuilder(inboxId: inboxId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete Inbox
     - DELETE /inboxes/{inboxId}
     - Permanently delete an inbox and associated email address
     - API Key:
       - type: apiKey x-api-key 
       - name: API_KEY
     
     - parameter inboxId: (path) inboxId 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteInboxUsingDELETEWithRequestBuilder(inboxId inboxId: NSUUID) -> RequestBuilder<Void> {
        var path = "/inboxes/{inboxId}"
        path = path.stringByReplacingOccurrencesOfString("{inboxId}", withString: "\(inboxId)", options: .LiteralSearch, range: nil)
        let URLString = MailSlurpAPISwiftClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = MailSlurpAPISwiftClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get Inbox
     
     - parameter inboxId: (path) inboxId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getInboxUsingGET(inboxId inboxId: NSUUID, completion: ((data: Inbox?, error: ErrorType?) -> Void)) {
        getInboxUsingGETWithRequestBuilder(inboxId: inboxId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get Inbox
     - GET /inboxes/{inboxId}
     - Returns an inbox's properties, including its email address and ID
     - API Key:
       - type: apiKey x-api-key 
       - name: API_KEY
     - examples: [{contentType=application/json, example={
  "emailAddress" : "emailAddress",
  "created" : "2000-01-23T04:56:07.000+00:00",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "userId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
}}]
     
     - parameter inboxId: (path) inboxId 

     - returns: RequestBuilder<Inbox> 
     */
    public class func getInboxUsingGETWithRequestBuilder(inboxId inboxId: NSUUID) -> RequestBuilder<Inbox> {
        var path = "/inboxes/{inboxId}"
        path = path.stringByReplacingOccurrencesOfString("{inboxId}", withString: "\(inboxId)", options: .LiteralSearch, range: nil)
        let URLString = MailSlurpAPISwiftClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Inbox>.Type = MailSlurpAPISwiftClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     List Inboxes
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getInboxesUsingGET(completion: ((data: [Inbox]?, error: ErrorType?) -> Void)) {
        getInboxesUsingGETWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     List Inboxes
     - GET /inboxes
     - List the inboxes you have created
     - API Key:
       - type: apiKey x-api-key 
       - name: API_KEY
     - examples: [{contentType=application/json, example=[ {
  "emailAddress" : "emailAddress",
  "created" : "2000-01-23T04:56:07.000+00:00",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "userId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
}, {
  "emailAddress" : "emailAddress",
  "created" : "2000-01-23T04:56:07.000+00:00",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "userId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
} ]}]

     - returns: RequestBuilder<[Inbox]> 
     */
    public class func getInboxesUsingGETWithRequestBuilder() -> RequestBuilder<[Inbox]> {
        let path = "/inboxes"
        let URLString = MailSlurpAPISwiftClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[Inbox]>.Type = MailSlurpAPISwiftClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
