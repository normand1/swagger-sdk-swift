//
// EmailControllerAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class EmailControllerAPI: APIBase {
    /**
     Delete Email
     
     - parameter emailId: (path) emailId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteEmailUsingDELETE(emailId emailId: NSUUID, completion: ((error: ErrorType?) -> Void)) {
        deleteEmailUsingDELETEWithRequestBuilder(emailId: emailId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete Email
     - DELETE /emails/{emailId}
     - Deletes an email and removes it from the inbox
     - API Key:
       - type: apiKey x-api-key 
       - name: API_KEY
     
     - parameter emailId: (path) emailId 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteEmailUsingDELETEWithRequestBuilder(emailId emailId: NSUUID) -> RequestBuilder<Void> {
        var path = "/emails/{emailId}"
        path = path.stringByReplacingOccurrencesOfString("{emailId}", withString: "\(emailId)", options: .LiteralSearch, range: nil)
        let URLString = MailSlurpAPISwiftClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = MailSlurpAPISwiftClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get Email Analytics
     
     - parameter emailId: (path) emailId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getEmailAnalyticsUsingGET(emailId emailId: NSUUID, completion: ((data: EmailAnalytics?, error: ErrorType?) -> Void)) {
        getEmailAnalyticsUsingGETWithRequestBuilder(emailId: emailId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get Email Analytics
     - GET /emails/{emailId}/analytics
     - Returns a spam analysis on a given email
     - API Key:
       - type: apiKey x-api-key 
       - name: API_KEY
     - examples: [{contentType=application/json, example={
  "spamNegativityPercentage" : 0
}}]
     
     - parameter emailId: (path) emailId 

     - returns: RequestBuilder<EmailAnalytics> 
     */
    public class func getEmailAnalyticsUsingGETWithRequestBuilder(emailId emailId: NSUUID) -> RequestBuilder<EmailAnalytics> {
        var path = "/emails/{emailId}/analytics"
        path = path.stringByReplacingOccurrencesOfString("{emailId}", withString: "\(emailId)", options: .LiteralSearch, range: nil)
        let URLString = MailSlurpAPISwiftClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<EmailAnalytics>.Type = MailSlurpAPISwiftClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get Email Content
     
     - parameter emailId: (path) emailId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getEmailUsingGET(emailId emailId: NSUUID, completion: ((data: Email?, error: ErrorType?) -> Void)) {
        getEmailUsingGETWithRequestBuilder(emailId: emailId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get Email Content
     - GET /emails/{emailId}
     - Returns a email summary object with headers and content. To retrieve the raw unparsed email use the getRawMessage endpoint
     - API Key:
       - type: apiKey x-api-key 
       - name: API_KEY
     - examples: [{contentType=application/json, example={
  "cc" : [ "cc", "cc" ],
  "createdAt" : "2000-01-23T04:56:07.000+00:00",
  "headers" : {
    "key" : "headers"
  },
  "bcc" : [ "bcc", "bcc" ],
  "subject" : "subject",
  "from" : "from",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "to" : [ "to", "to" ],
  "body" : "body",
  "inboxId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "userId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "updatedAt" : "2000-01-23T04:56:07.000+00:00"
}}]
     
     - parameter emailId: (path) emailId 

     - returns: RequestBuilder<Email> 
     */
    public class func getEmailUsingGETWithRequestBuilder(emailId emailId: NSUUID) -> RequestBuilder<Email> {
        var path = "/emails/{emailId}"
        path = path.stringByReplacingOccurrencesOfString("{emailId}", withString: "\(emailId)", options: .LiteralSearch, range: nil)
        let URLString = MailSlurpAPISwiftClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Email>.Type = MailSlurpAPISwiftClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get Raw Email Content
     
     - parameter emailId: (path) emailId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getRawEmailUsingGET(emailId emailId: NSUUID, completion: ((data: String?, error: ErrorType?) -> Void)) {
        getRawEmailUsingGETWithRequestBuilder(emailId: emailId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get Raw Email Content
     - GET /emails/{emailId}/raw
     - Returns a raw, unparsed and unprocessed email
     - API Key:
       - type: apiKey x-api-key 
       - name: API_KEY
     - examples: [{contentType=application/json, example=""}]
     
     - parameter emailId: (path) emailId 

     - returns: RequestBuilder<String> 
     */
    public class func getRawEmailUsingGETWithRequestBuilder(emailId emailId: NSUUID) -> RequestBuilder<String> {
        var path = "/emails/{emailId}/raw"
        path = path.stringByReplacingOccurrencesOfString("{emailId}", withString: "\(emailId)", options: .LiteralSearch, range: nil)
        let URLString = MailSlurpAPISwiftClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = MailSlurpAPISwiftClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
